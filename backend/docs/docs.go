// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/admin/metrics/clientOverview": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "metrics client overview",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.MetricsClientOverview"
                        }
                    }
                }
            }
        },
        "/admin/metrics/clientToDealSpDetail": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "metrics client to deal sp detail",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Which page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.MetricsClientDetailItem"
                            }
                        }
                    }
                }
            }
        },
        "/admin/metrics/overview": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "metrics overview",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/server.MetricsOverview"
                        }
                    }
                }
            }
        },
        "/admin/metrics/spOverview": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "metrics sp overview",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.MetricsSpOverview"
                        }
                    }
                }
            }
        },
        "/admin/metrics/spToDealNewClientDetail": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "metrics sp to deal new client detail",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Which page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.MetricsSpDetailItem"
                            }
                        }
                    }
                }
            }
        },
        "/admin/user/modifyPassword": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Admin user modify password",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "modify password param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.ModifyPasswordParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/admin/userLogin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Admin user login",
                "parameters": [
                    {
                        "description": "admin user param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.AdminUserParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.LoginUser"
                        }
                    }
                }
            }
        },
        "/chat/history": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Get chat history",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Partner uid",
                        "name": "partner",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Option, unix time(seconds). It returns last messages if you not set.",
                        "name": "before",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "client modify detailed information",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "client detail param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.ClientDetailParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/client/review": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "client"
                ],
                "summary": "Submit a review",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "review param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.ReviewParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/clientDetail": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get client detailed info",
                "parameters": [
                    {
                        "type": "string",
                        "example": "f01624861",
                        "description": "Client address id.",
                        "name": "address_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.ClientInfo"
                        }
                    }
                }
            }
        },
        "/clientHistoryDealStats": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get client statistics about history deals",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Which page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "f01624861",
                        "description": "Client address id.",
                        "name": "address_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.ClientHistoryDealStatsItem"
                            }
                        }
                    }
                }
            }
        },
        "/clientProfile": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get client profile",
                "parameters": [
                    {
                        "type": "string",
                        "example": "f01624861",
                        "description": "Client address id.",
                        "name": "address_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.ClientProfile"
                        }
                    }
                }
            }
        },
        "/clientReviews": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get client reviews",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Which page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "f01624861",
                        "description": "Client address id.",
                        "name": "address_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Review"
                            }
                        }
                    }
                }
            }
        },
        "/clients": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Client list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Which page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "storage_deals",
                            "storage_capacity",
                            "total_data_cap",
                            "used_data_cap",
                            "data_cap",
                            "verified_deals"
                        ],
                        "type": "string",
                        "default": "data_cap",
                        "description": "Sorting option. Example: sort_by=data_cap",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Option to order providers. Example: order=desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search client by keyword, support client id/name/location. Example: f01234",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Client"
                            }
                        }
                    }
                }
            }
        },
        "/provider/detail": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "provider"
                ],
                "summary": "SP owner modify SP detailed information",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "provider detail param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.ProviderDetailParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/providers": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Storage provider list",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Which page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "reputation_score",
                            "review_score",
                            "storage_success_rate",
                            "retrieval_success_rate",
                            "price",
                            "verified_price",
                            "iso_code",
                            "quality_adj_power",
                            "storage_deals"
                        ],
                        "type": "string",
                        "default": "reputation_score",
                        "description": "Sorting option. Example: sort_by=reputation_score",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "default": "desc",
                        "description": "Option to order providers. Example: order=desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "all",
                            "registered",
                            "autofilled"
                        ],
                        "type": "string",
                        "default": "all",
                        "description": "Option to filter providers by registered.  Example: sps_status=all",
                        "name": "sps_status",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "all",
                            "Asia",
                            "Europe",
                            "Africa",
                            "Oceania",
                            "South America",
                            "North America"
                        ],
                        "type": "string",
                        "default": "all",
                        "description": "Option to filter providers by region.  Example: region=Asia",
                        "name": "region",
                        "in": "query"
                    },
                    {
                        "type": "object",
                        "description": "Option to filter providers by raw_power_range(TiB) passed as a string representation of a JSON object; when implementing, make sure the parameter is URL-encoded to ensure safe transport.   Example: raw_power_range={'min':'0','max':'1024'}",
                        "name": "raw_power_range",
                        "in": "query"
                    },
                    {
                        "type": "object",
                        "description": "Option to filter providers by storage_success_rate_range passed as a string representation of a JSON object; when implementing, make sure the parameter is URL-encoded to ensure safe transport.   Example: storage_success_rate_range={'min':'0.85','max':'1'}",
                        "name": "storage_success_rate_range",
                        "in": "query"
                    },
                    {
                        "type": "object",
                        "description": "Option to filter providers by reputation_score_range passed as a string representation of a JSON object; when implementing, make sure the parameter is URL-encoded to ensure safe transport.   Example: reputation_score_range={'min':'90','max':'100'}",
                        "name": "reputation_score_range",
                        "in": "query"
                    },
                    {
                        "type": "object",
                        "description": "Option to filter providers by review_score_range passed as a string representation of a JSON object; when implementing, make sure the parameter is URL-encoded to ensure safe transport.   Example: review_score_range={'min':'4','max':'5'}",
                        "name": "review_score_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search providers by keyword, support miner id/name/location. Example: f01234",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/spOwnerProfile": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get SP owner profile",
                "parameters": [
                    {
                        "type": "string",
                        "example": "f01694606",
                        "description": "Owner address id.",
                        "name": "address_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.SPOwnerProfile"
                        }
                    }
                }
            }
        },
        "/spOwnerReviews": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get reviews by SP owner",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Which page to return",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "description": "Max records to return",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "f01694606",
                        "description": "Owner address id.",
                        "name": "address_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Review"
                            }
                        }
                    }
                }
            }
        },
        "/spServiceDetail": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Get SP service detail list by owner",
                "parameters": [
                    {
                        "type": "string",
                        "example": "f01694606",
                        "description": "Owner address id.",
                        "name": "address_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/repo.Provider"
                            }
                        }
                    }
                }
            }
        },
        "/user/modifyPassword": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User modify password",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "modify password param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.ModifyPasswordParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/user/profile": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "User modify profile",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt access token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "modify profile param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.ProfileParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/user/token": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Generate an access token",
                "parameters": [
                    {
                        "type": "string",
                        "default": "Bearer YOUR_JWT",
                        "description": "jwt refresh token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access token",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/userLogin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "user param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.UserParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.LoginUser"
                        }
                    }
                }
            }
        },
        "/userResetPwd": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "User reset password",
                "parameters": [
                    {
                        "description": "reset password param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.ResetPwdParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/userSignUp": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "User sign up",
                "parameters": [
                    {
                        "description": "sign up param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.SignUpParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/repo.LoginUser"
                        }
                    }
                }
            }
        },
        "/vcodeByEmailToResetPwd": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "public"
                ],
                "summary": "Send a verification code by email to reset the password",
                "parameters": [
                    {
                        "description": "user email param",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/server.EmailVcodeParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ws"
                ],
                "summary": "websocket api",
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "repo.Client": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string"
                },
                "address_robust": {
                    "type": "string"
                },
                "bandwidth": {
                    "type": "string"
                },
                "data_cap": {
                    "type": "number"
                },
                "location": {
                    "type": "string"
                },
                "monthly_storage": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "service_requirement": {
                    "type": "string"
                },
                "storage_capacity": {
                    "type": "number"
                },
                "storage_deals": {
                    "type": "integer"
                },
                "total_data_cap": {
                    "type": "number"
                },
                "use_case": {
                    "type": "string"
                },
                "used_data_cap": {
                    "type": "number"
                },
                "verified_deals": {
                    "type": "integer"
                }
            }
        },
        "repo.ClientHistoryDealStatsItem": {
            "type": "object",
            "properties": {
                "avg_price": {
                    "type": "number"
                },
                "avg_verified_price": {
                    "type": "number"
                },
                "data_cap": {
                    "type": "number"
                },
                "first_deal_time": {
                    "type": "integer"
                },
                "iso_code": {
                    "type": "string"
                },
                "max_piece_size": {
                    "type": "number"
                },
                "min_piece_size": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "quality_adj_power": {
                    "type": "number"
                },
                "raw_power": {
                    "type": "number"
                },
                "region": {
                    "type": "string"
                },
                "reputation_score": {
                    "type": "integer"
                },
                "retrieval_success_rate": {
                    "type": "number"
                },
                "review_score": {
                    "type": "number"
                },
                "reviews": {
                    "type": "integer"
                },
                "storage_capacity": {
                    "type": "number"
                },
                "storage_deals": {
                    "description": "relevant client deal",
                    "type": "integer"
                },
                "storage_success_rate": {
                    "type": "number"
                }
            }
        },
        "repo.ClientInfo": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string"
                },
                "bandwidth": {
                    "type": "string"
                },
                "data_cap": {
                    "type": "number"
                },
                "monthly_storage": {
                    "type": "string"
                },
                "service_requirement": {
                    "type": "string"
                },
                "storage_capacity": {
                    "type": "number"
                },
                "storage_deals": {
                    "type": "integer"
                },
                "total_data_cap": {
                    "type": "number"
                },
                "use_case": {
                    "type": "string"
                },
                "used_data_cap": {
                    "type": "number"
                },
                "verified_deals": {
                    "type": "integer"
                }
            }
        },
        "repo.ClientProfile": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string"
                },
                "address_robust": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slack": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "repo.LoginUser": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "address_id": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "client_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "repo.MetricsClientDetailItem": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "string"
                },
                "owners": {
                    "type": "string"
                },
                "provider_num": {
                    "type": "integer"
                },
                "providers": {
                    "type": "string"
                },
                "register_time": {
                    "$ref": "#/definitions/types.UnixTime"
                }
            }
        },
        "repo.MetricsClientOverview": {
            "type": "object",
            "properties": {
                "clients": {
                    "type": "integer"
                },
                "clients_to_deal_sp": {
                    "type": "integer"
                },
                "incr_clients": {
                    "type": "integer"
                },
                "incr_clients_to_deal_sp_month": {
                    "type": "integer"
                },
                "incr_target_clients": {
                    "type": "integer"
                },
                "target_clients": {
                    "type": "integer"
                }
            }
        },
        "repo.MetricsSpDetailItem": {
            "type": "object",
            "properties": {
                "new_client_num": {
                    "type": "integer"
                },
                "new_clients": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "providers": {
                    "type": "string"
                },
                "register_time": {
                    "$ref": "#/definitions/types.UnixTime"
                }
            }
        },
        "repo.MetricsSpOverview": {
            "type": "object",
            "properties": {
                "average_retrieval_success_ratio": {
                    "type": "number"
                },
                "incr_average_retrieval_success_ratio": {
                    "type": "number"
                },
                "incr_sps_to_deal_new_client_month": {
                    "type": "integer"
                },
                "sps_to_deal_new_client": {
                    "type": "integer"
                }
            }
        },
        "repo.Provider": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "available_deals": {
                    "type": "string"
                },
                "bandwidth": {
                    "type": "string"
                },
                "certification": {
                    "type": "string"
                },
                "experience": {
                    "type": "string"
                },
                "first_deal_time": {
                    "type": "integer"
                },
                "is_member": {
                    "type": "string"
                },
                "iso_code": {
                    "type": "string"
                },
                "max_piece_size": {
                    "type": "number"
                },
                "min_piece_size": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "parallel_deals": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "quality_adj_power": {
                    "type": "number"
                },
                "raw_power": {
                    "type": "number"
                },
                "region": {
                    "type": "string"
                },
                "renewable_energy": {
                    "type": "string"
                },
                "reputation_score": {
                    "type": "integer"
                },
                "retrieval_success_rate": {
                    "type": "number"
                },
                "review_score": {
                    "type": "number"
                },
                "reviews": {
                    "type": "integer"
                },
                "sealing_speed": {
                    "type": "string"
                },
                "storage_deals": {
                    "type": "integer"
                },
                "storage_success_rate": {
                    "type": "number"
                },
                "verified_price": {
                    "type": "string"
                }
            }
        },
        "repo.Review": {
            "type": "object",
            "properties": {
                "client": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "$ref": "#/definitions/types.UnixTime"
                },
                "provider": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "repo.SPOwnerProfile": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string"
                },
                "address_robust": {
                    "type": "string"
                },
                "avatar": {
                    "type": "string"
                },
                "contact_email": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "reputation_score": {
                    "type": "number"
                },
                "review_score": {
                    "type": "number"
                },
                "reviews": {
                    "type": "integer"
                },
                "slack": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "server.AdminUserParam": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "filfind"
                },
                "password": {
                    "type": "string",
                    "example": "filFind123"
                }
            }
        },
        "server.ClientDetailParams": {
            "type": "object",
            "properties": {
                "bandwidth": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "300M"
                },
                "monthly_storage": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "10TiB"
                },
                "service_requirement": {
                    "type": "string",
                    "maxLength": 1024,
                    "example": "More information about us."
                },
                "use_case": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Entertainment/Media/Science"
                }
            }
        },
        "server.EmailVcodeParam": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                }
            }
        },
        "server.MetricsOverview": {
            "type": "object",
            "properties": {
                "auto_filled_providers": {
                    "type": "integer"
                },
                "average_accesses_daily": {
                    "type": "number"
                },
                "incr_auto_filled_providers": {
                    "type": "integer"
                },
                "incr_average_accesses_daily": {
                    "type": "number"
                },
                "incr_internal_contacts": {
                    "type": "integer"
                },
                "incr_registered_providers": {
                    "type": "integer"
                },
                "incr_registered_sp_ratio": {
                    "type": "number"
                },
                "incr_total_accesses": {
                    "type": "integer"
                },
                "internal_contacts": {
                    "type": "integer"
                },
                "registered_providers": {
                    "type": "integer"
                },
                "registered_sp_ratio": {
                    "type": "number"
                },
                "total_accesses": {
                    "type": "integer"
                }
            }
        },
        "server.ModifyPasswordParam": {
            "type": "object",
            "required": [
                "new_password",
                "password"
            ],
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "Hello456"
                },
                "password": {
                    "type": "string",
                    "example": "Hello123"
                }
            }
        },
        "server.ProfileParam": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string",
                    "maxLength": 1024,
                    "example": ""
                },
                "contact_email": {
                    "type": "string",
                    "maxLength": 256,
                    "example": "public@example.com"
                },
                "description": {
                    "type": "string",
                    "maxLength": 2048,
                    "example": "More information about us."
                },
                "github": {
                    "type": "string",
                    "maxLength": 128,
                    "example": ""
                },
                "location": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Shanghai,China"
                },
                "logo": {
                    "type": "string",
                    "maxLength": 1024,
                    "example": ""
                },
                "name": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "example name"
                },
                "slack": {
                    "type": "string",
                    "maxLength": 128,
                    "example": ""
                },
                "twitter": {
                    "type": "string",
                    "maxLength": 128,
                    "example": ""
                }
            }
        },
        "server.ProviderDetailParams": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "f01234"
                },
                "available_deals": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "10TiB/D"
                },
                "bandwidth": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "300M"
                },
                "certification": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "PCI Compliance"
                },
                "experience": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Textile/Estuary"
                },
                "is_member": {
                    "type": "string",
                    "enum": [
                        "Yes",
                        "No"
                    ],
                    "example": "No"
                },
                "parallel_deals": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "10"
                },
                "renewable_energy": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "1MWh"
                },
                "sealing_speed": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "10TiB/D"
                }
            }
        },
        "server.ResetPwdParams": {
            "type": "object",
            "required": [
                "email",
                "new_password",
                "vcode"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "new_password": {
                    "type": "string",
                    "example": "Hello456"
                },
                "vcode": {
                    "type": "string",
                    "example": "123456"
                }
            }
        },
        "server.ReviewParams": {
            "type": "object",
            "required": [
                "content",
                "provider",
                "score",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string",
                    "maxLength": 1024,
                    "example": "Great. It's the ultimate experience."
                },
                "provider": {
                    "type": "string",
                    "example": "f01662887"
                },
                "score": {
                    "type": "integer",
                    "maximum": 5,
                    "minimum": 0,
                    "example": 5
                },
                "title": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "Ultimate Experience"
                }
            }
        },
        "server.SignUpParam": {
            "type": "object",
            "required": [
                "address",
                "email",
                "message",
                "name",
                "password",
                "signature",
                "type"
            ],
            "properties": {
                "address": {
                    "description": "example privateKey hex: 7b2254797065223a22736563703235366b31222c22507269766174654b6579223a22347179396744327177724f68764148305267667738624b346b52546e575535595337622f4338374435686f3d227d",
                    "type": "string",
                    "minLength": 3,
                    "example": "f1gxcq2s72oepgufqrkbblbwgnxosrkwn3jib3bmy"
                },
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "message": {
                    "description": "raw data:\nSignature for filfind\nf1gxcq2s72oepgufqrkbblbwgnxosrkwn3jib3bmy\n2022-04-14T12:03:45.169Z\nraw data hex: 5369676e617475726520666f722066696c66696e640d0a663167786371327337326f657067756671726b62626c6277676e786f73726b776e336a696233626d790d0a323032322d30342d31345431323a30333a34352e3136395a",
                    "type": "string",
                    "example": "5369676e617475726520666f722066696c66696e640d0a663167786371327337326f657067756671726b62626c6277676e786f73726b776e336a696233626d790d0a323032322d30342d31345431323a30333a34352e3136395a"
                },
                "name": {
                    "type": "string",
                    "maxLength": 128,
                    "example": "hello"
                },
                "password": {
                    "type": "string",
                    "example": "Hello123"
                },
                "signature": {
                    "type": "string",
                    "example": "01032aa043dea7ef185a3f5345d8bc9ee672b91584b090fca782e04f1bf36792211addd36fe6cb1e8829045d95175a48a3e431061362044bf830275829d9a7fe0d00"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "sp_owner",
                        "data_client"
                    ],
                    "example": "sp_owner"
                }
            }
        },
        "server.UserParam": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "test@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "Hello123"
                }
            }
        },
        "types.UnixTime": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
